# Generated by Django 5.2.5 on 2025-08-09 09:33

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bus_number', models.CharField(help_text="Unique bus registration number (e.g., 'BT001')", max_length=20, unique=True)),
                ('bus_type', models.CharField(choices=[('standard', 'Standard'), ('deluxe', 'Deluxe'), ('luxury', 'Luxury'), ('sleeper', 'Sleeper')], default='standard', help_text='Type of bus affecting price and amenities', max_length=20)),
                ('total_seats', models.IntegerField(help_text='Total number of passenger seats', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)])),
                ('amenities', models.TextField(blank=True, help_text="Comma-separated list of amenities (e.g., 'WiFi, AC, USB Charging')")),
                ('is_active', models.BooleanField(default=True, help_text='Whether this bus is currently in service')),
                ('last_maintenance', models.DateField(blank=True, help_text='Date of last maintenance check', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bus',
                'verbose_name_plural': 'Buses',
                'ordering': ['bus_number'],
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(default='SA Bus Transport', help_text='Company name displayed on website', max_length=200)),
                ('phone_primary', models.CharField(help_text='Main contact phone number', max_length=20)),
                ('phone_secondary', models.CharField(blank=True, help_text='Secondary phone number (optional)', max_length=20)),
                ('email', models.EmailField(help_text='Contact email address', max_length=254)),
                ('whatsapp_number', models.CharField(help_text='WhatsApp number for customer support', max_length=20)),
                ('address', models.TextField(help_text='Physical address of the company')),
                ('business_hours', models.TextField(default='Monday - Sunday: 6:00 AM - 10:00 PM', help_text='Operating hours')),
                ('facebook_url', models.URLField(blank=True, help_text='Facebook page URL')),
                ('twitter_url', models.URLField(blank=True, help_text='Twitter profile URL')),
                ('instagram_url', models.URLField(blank=True, help_text='Instagram profile URL')),
                ('emergency_contact', models.CharField(help_text='24/7 emergency contact number', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact Information',
                'verbose_name_plural': 'Contact Information',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(help_text='The question customers frequently ask', max_length=300)),
                ('answer', models.TextField(help_text='Detailed answer to the question')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in which this FAQ appears (lower numbers first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this FAQ is displayed on the website')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['order', 'question'],
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Route name (e.g., 'Cape Town Express')", max_length=200)),
                ('origin', models.CharField(help_text="Starting city (e.g., 'Cape Town')", max_length=100)),
                ('destination', models.CharField(help_text="Ending city (e.g., 'Johannesburg')", max_length=100)),
                ('distance_km', models.FloatField(help_text='Distance in kilometers')),
                ('duration_hours', models.FloatField(help_text='Travel time in hours')),
                ('route_type', models.CharField(choices=[('one_way', 'One Way'), ('round_trip', 'Round Trip')], default='one_way', help_text='Whether this is a one-way or round-trip route', max_length=20)),
                ('base_price_zar', models.DecimalField(decimal_places=2, help_text='Base price in South African Rand (ZAR)', max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this route is currently available for booking')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bus Route',
                'verbose_name_plural': 'Bus Routes',
                'ordering': ['origin', 'destination'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_time', models.DateTimeField(help_text='When the bus departs')),
                ('arrival_time', models.DateTimeField(help_text='When the bus arrives at destination')),
                ('available_seats', models.IntegerField(help_text='Number of seats still available for booking')),
                ('price_zar', models.DecimalField(decimal_places=2, help_text='Price for this specific trip in ZAR', max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this schedule is available for booking')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bus', models.ForeignKey(help_text='Which bus will be used for this trip', on_delete=django.db.models.deletion.CASCADE, to='transport.bus')),
                ('route', models.ForeignKey(help_text='Which route this schedule is for', on_delete=django.db.models.deletion.CASCADE, to='transport.route')),
            ],
            options={
                'verbose_name': 'Bus Schedule',
                'verbose_name_plural': 'Bus Schedules',
                'ordering': ['departure_time'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique booking reference number', unique=True)),
                ('passenger_name', models.CharField(help_text='Full name of the passenger', max_length=100)),
                ('passenger_email', models.EmailField(help_text='Email for booking confirmation', max_length=254)),
                ('passenger_phone', models.CharField(help_text='Contact phone number', max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('passenger_id_number', models.CharField(blank=True, help_text='ID/Passport number (optional)', max_length=20)),
                ('number_of_seats', models.IntegerField(help_text='Number of seats being booked', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('total_amount_zar', models.DecimalField(decimal_places=2, help_text='Total amount to be paid in ZAR', max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed'), ('no_show', 'No Show')], default='pending', help_text='Current status of the booking', max_length=20)),
                ('stripe_payment_intent_id', models.CharField(blank=True, help_text='Stripe payment intent ID for tracking', max_length=200, null=True)),
                ('payment_date', models.DateTimeField(blank=True, help_text='When payment was completed', null=True)),
                ('special_requests', models.TextField(blank=True, help_text='Any special requests from passenger (wheelchair access, dietary needs, etc.)')),
                ('booking_date', models.DateTimeField(auto_now_add=True, help_text='When this booking was created')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('schedule', models.ForeignKey(help_text='Which scheduled trip this booking is for', on_delete=django.db.models.deletion.CASCADE, to='transport.schedule')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-booking_date'],
            },
        ),
    ]
